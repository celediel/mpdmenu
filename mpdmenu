#!/bin/bash

dmenu="dmenu -p"

all_name='[ALL]'
mode=artist

controls="󰐎 toggle
 play
 pause
󰒭 next
󰒮 prev
 stop
󰒟 random
󰕇 repeat"

show_help() {
    me=$(basename $0)
    printf "$me\ndmenu frontend to mpd\n\n"
    printf "USAGE:\n\t$me [FLAGS]\n"
    printf "FLAGS:\n"
    printf "\t-h, --help\t\tPrints help information\n"
    printf "\t-a, --artist\t\tArtist mode\n"
    printf "\t-A, --albumartist\tAlbum artist mode\n"
    printf "\t-b, --album\t\tAlbum mode\n"
    printf "\t-p, --playlist\t\tPlaylist mode\n"
    printf "\t-P, --playlists\t\tPlaylists mode\n"
    printf "\t-c, --control\t\tControl mode\n"
    printf "\n"
    printf "DMENU ARGS:\n"
    printf "\tEvery argument after :: will be passed to dmenu.\n"
    printf "\n\tFor example:\n"
    printf "\n\t$me -p :: -sb '#000000'\n"
    printf "\n"
}

make_status() {
    local nowplaying=$(mpc status | head -n1)
    local random_status=$(mpc status | tail -n1 | grep -Eo "random: (on|off)" | cut -d':' -f2 | xargs)
    local repeat_status=$(mpc status | tail -n1 | grep -Eo "repeat: (on|off)" | cut -d':' -f2 | xargs)
    local status_status=$(mpc status | head -n2 | tail -n1 | grep -Eo "\[\w+\]")
    local random=$([ "$random_status" == "on" ] && echo "󰒝" || echo "󰒞")
    local repeat=$([ "$repeat_status" == "on" ] && echo "󰑖" || echo "󰑗")
    local status=$([ "$status_status" == "[playing]" ] && echo "" || echo "")

    printf "$status $random $repeat $nowplaying"
}

d_artist() {
    # kinda stupid but it works
    mpc list "${1}artist" | sort -f | $dmenu "artist > " "${dmenu_args[@]}"
}

d_album() {
    local artist="$1"
    local wantedtype="$2"
    local albums

    mapfile -t albums < <(mpc list album "$wantedtype" "$artist")
    if (( ${#albums[@]} > 1 )) ; then
        {
            printf '%s\n' "$all_name"
            printf '%s\n' "${albums[@]}" | sort -f
        } | $dmenu "albums by $artist > " "${dmenu_args[@]}"
    else
        # We only have one album, so just use that.
        printf '%s\n' "${albums[0]}"
    fi
}

d_playlist() {
    local format="%position% %title% \[%time%\]"
    local extra_format="(%artist% - %album%)"
    local track
    local num_extras

    # If all tracks are from the same artist and album, no need to display that
    num_extras=$(mpc playlist -f "$extra_format" | sort | uniq | wc -l)
    (( num_extras == 1 )) || format+=" $extra_format"

    track=$(mpc playlist -f "$format" | $dmenu "$(make_status) > " "${dmenu_args[@]}")
    printf '%s' "${track%% *}"
}

d_control() {
    printf "${controls[@]}" | $dmenu "$(make_status) > " "${dmenu_args[@]}" | cut -d' ' -f2
}

i=2

for arg do
    if [[ $arg == :: ]]; then
        dmenu_args=( "${@:$i}" )
        break
    fi

    case "$arg" in
        -h|--help) show_help && exit 0 ;;
        -a|--artist) mode=artist ;;
        -A|--albumartist) mode=albumartist ;;
        -b|--album) mode=album ;;
        -p|--playlist) mode=playlist ;;
        -P|--playlists) mode=playlists ;;
        -c|--control) mode=control ;;
    esac

    let i++
done

case "$mode" in
    artist)
        artist=$(d_artist)
        [[ $artist ]] || exit 1

        album=$(d_album "$artist" "artist")
        [[ $album ]] || exit 2

        mpc clear >/dev/null
        if [[ $album == "$all_name" ]]; then
            mpc find artist "$artist" | sort | mpc add
        else
            mpc find artist "$artist" album "$album" | sort | mpc add
        fi

        mpc play >/dev/null
    ;;
    albumartist)
        artist=$(d_artist "album")
        printf "got $artist back"
        [[ $artist ]] || exit 1

        album=$(d_album "$artist" "albumartist")
        printf "got $album by $artist back"
        [[ $album ]] || exit 2

        mpc clear >/dev/null
        if [[ $album == "$all_name" ]]; then
            mpc find albumartist "$artist" | sort | mpc add
        else
            mpc find albumartist "$artist" album "$album" | sort | mpc add
        fi

        mpc play >/dev/null
    ;;
    album)
        album=$(mpc list album | $dmenu "albums > ")
        [[ $album ]] || exit 1

        mpc clear >/dev/null
        mpc find album "$album" | sort | mpc add
        mpc play >/dev/null
    ;;
    playlist)
        mpc play "$(d_playlist)" >/dev/null
    ;;
    playlists)
        playlist=$(mpc lsplaylists | $dmenu "playlists > ")
        [[ $playlist ]] || exit 1
        mpc clear >/dev/null
        mpc load $playlist >/dev/null
    ;;
    control)
        mpc "$(d_control)" >/dev/null
    ;;
esac
